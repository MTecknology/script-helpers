#!/bin/sh
##
# Title:      Script Helpers (sh)
# Copyright:  2020 Michael Lustfield <MTecknology>
# License:    GPL-3+
##


##
# Convenience Variables
##

# Log Levels
DEBUG=0; D=0
INFO=1; I=1
WARN=2; W=2
ERROR=3; E=3
# shellcheck disable=SC2034  # Global Constants
readonly D DEBUG I INFO W WARN E ERROR


##
# Helper Functions
##


##
# Print a formatted (critical) message and exit with status
#
# **Usage:** die [exit_status] message
#
# **Defaults:**
#
# - exit_status: 1
##
die() {
        # If first argument was an integer, use as exit_status
        if [ "$1" -eq "$1" ] 2>/dev/null; then
                exit_status="$1"; shift
        else
                exit_status=1
        fi

        printf '*** CRITICAL: %s ***\n' "$1"
        exit "$exit_status"
}


##
# Print a formatted (critical) message if ENV[LOG_LEVEL] >= level
#
# **Usage:** log level message
#
# **Defaults:**
#
# - ENV[LOG_LEVEL]: 2
#
# **Parameter Options:**
#
# - level => 0:debug, 1:info, \*2:warn, 3:error
##
log() {
        if [ "${LOG_LEVEL:-2}" -le "$1" ]; then
                case "$1" in
                        0) lvl='DEBUG';;
                        1) lvl='INFO';;
                        2) lvl='WARN';;
                        3) lvl='ERROR';;
                        *) lvl='UNKNOWN';;
                esac

                printf '*** %s: %s ***\n' "$lvl" "$2"
        fi
}


##
# Evaluate if a given string is true-like
#
# **Usage:** is_true "$str"
#
# **Returns:** '0' if ($str is 0) or (lower($1) == true)
##
is_true() {
        str="$(printf '%s' "$1" | tr '[:upper:]' '[:lower:]')"
        [ "$str" -eq '0' ] 2>/dev/null && return 0
        [ "$str" = 'true' ] && return 0

        return 1
}


##
# Evaluate if a given string is true-like
#
# **Usage:** is_false "$str"
#
# **Returns:** '0' if ($str is 1) or (lower($1) != true)
##
is_false() {
        is_true "$1" && return 1
        return 0
}
